createdAt: "2019-06-11T03:08:10.379Z"
updatedAt: "2019-08-26T01:45:01.227Z"
type: "MARKDOWN_NOTE"
folder: "e6cf9d6de29d53bd1458"
title: "graphviz"
tags: []
content: '''
  ## graphviz
  
  **install**
  `sudo apt-get install graphviz` 
  `brew install graphviz` 
  
  **export**
  `dot <dot-file> -T <format> -o <output-file>`
  `dot test.dot -T png -o test.png`
  
  **sample**
  ```dot
  digraph main{
      graph [rankdir="LR"] 
      node [fontsize=12, shape=record] 
      edge [style=dashed, arrowhead=vee]
  
      NodeGraph [
          label = "<0>NodeGraph
          |+T2& operator(T1*, T1*)"
      ]
  
      ServerNodeGraph [
          label="<0>ServerNodeGraph(TreeHead* head)
          |+ void createWeightedAdjacentMatrix()"
      ]
  
      GraphPartition [
          label="<0>(static class) GraphPartition
          |<1>Eigen::VectorXi recursive_cut(const WeightMatrix\\&, \\l
          \\   const WeightMatrix&, std::function\\<Eigen::VectorXi (const WeightMatrix)\\>)
          |+ ncut, ecut, rcut, mcut // cut function"
      ]
  
      DivPath
  
      PathOrderPlanning [
          label="<0>PathOrderPlanning
          |<1>+ struct DivPathCompare
          |bool run(TreeHead*, ServerMap*, uint32_t, \\l
          \\   std::vector\\<std::unordered_set\\<ServerNode*\\>\\>&);"
      ]
  
      PartitionManager [
          label="<0>PartitionManager
          |+bool run(FunctionPara&)
          |-bool partitioningOnePhysicalTree(TreeHead*)
          |-pMap: ServerMap*"
      ]
  
      ServerNodeGraph:0-> NodeGraph:0 [arrowhead=onormal]
  
      PartitionManager:0-> ServerNodeGraph:0
      PartitionManager:0-> GraphPartition:1
      PartitionManager:0-> PathOrderPlanning
  
      PathOrderPlanning:0-> DivPath
      PathOrderPlanning:1-> DivPath
  
  }
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
